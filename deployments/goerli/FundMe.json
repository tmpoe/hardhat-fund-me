{
  "address": "0xbdA0Fa2548cE0f22B4d5714888A6Cb0E807f2538",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "funderIndex",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x4cbbcf38dd5090fe1bd95471b90a757f09ecc9b22e27bd52e132630158a19ebf",
  "receipt": {
    "to": null,
    "from": "0xC75444ef801b50f5601230db66F784e2078BE7Bb",
    "contractAddress": "0xbdA0Fa2548cE0f22B4d5714888A6Cb0E807f2538",
    "transactionIndex": 117,
    "gasUsed": "917582",
    "logsBloom": "0x
    "blockHash": "0x18541e8e272e9f9d00e4ae1fc1550b8b0d29a21e447bf55db4de6602b5bc9b19",
    "transactionHash": "0x4cbbcf38dd5090fe1bd95471b90a757f09ecc9b22e27bd52e132630158a19ebf",
    "logs": [],
    "blockNumber": 8029274,
    "cumulativeGasUsed": "23292793",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"
  ],
  "numDeployments": 2,
  "solcInputHash": "bfa96bce5d2ec1c4da18ffa4080cfbdb",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"funderIndex\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\ncontract FundMe {\\n  using PriceConverter for uint256;\\n\\n  mapping(address => uint256) private s_addressToAmountFunded;\\n  address[] private s_funders;\\n\\n  // Could we make this constant?  /* hint: no! We should make it immutable! */\\n  address private immutable i_owner;\\n  uint256 public constant MINIMUM_USD = 50 * 10**18;\\n  AggregatorV3Interface private s_priceFeed;\\n\\n  modifier onlyOwner() {\\n    // require(msg.sender == owner);\\n    if (msg.sender != i_owner) revert FundMe__NotOwner();\\n    _;\\n  }\\n\\n  constructor(address priceFeedAddress) {\\n    i_owner = msg.sender;\\n    s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n  }\\n\\n  fallback() external payable {\\n    fund();\\n  }\\n\\n  receive() external payable {\\n    fund();\\n  }\\n\\n  function fund() public payable {\\n    require(\\n      msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n      \\\"You need to spend more ETH!\\\"\\n    );\\n    // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n    s_addressToAmountFunded[msg.sender] += msg.value;\\n    s_funders.push(msg.sender);\\n  }\\n\\n  function getVersion() public view returns (uint256) {\\n    // ETH/USD price feed address of Goerli Network.\\n    return s_priceFeed.version();\\n  }\\n\\n  function withdraw() public onlyOwner {\\n    address[] memory funders = s_funders;\\n\\n    for (uint256 funderIndex = 0; funderIndex < funders.length; funderIndex++) {\\n      address funder = funders[funderIndex];\\n      s_addressToAmountFunded[funder] = 0;\\n    }\\n    s_funders = new address[](0);\\n\\n    (bool callSuccess, ) = payable(msg.sender).call{\\n      value: address(this).balance\\n    }(\\\"\\\");\\n    require(callSuccess, \\\"Call failed\\\");\\n  }\\n\\n  function getOwner() public view returns (address) {\\n    return i_owner;\\n  }\\n\\n  function getFunder(uint256 funderIndex) public view returns (address) {\\n    return s_funders[funderIndex];\\n  }\\n\\n  function getAddressToAmountFunded(address funder)\\n    public\\n    view\\n    returns (uint256)\\n  {\\n    return s_addressToAmountFunded[funder];\\n  }\\n\\n  function getPriceFeed() public view returns (AggregatorV3Interface) {\\n    return s_priceFeed;\\n  }\\n}\\n\",\"keccak256\":\"0xfaf6517a33518f5dda2a4d5b1f04680b6a03f6743ed24286aa207a1731547a84\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n  // We could make this public, but then we'd have to deploy it\\n  function getPrice(AggregatorV3Interface priceFeed)\\n    internal\\n    view\\n    returns (uint256)\\n  {\\n    // https://docs.chain.link/docs/ethereum-addresses/\\n    (, int256 answer, , , ) = priceFeed.latestRoundData();\\n    // ETH/USD rate in 18 digit\\n    return uint256(answer * 10000000000);\\n    // or (Both will do the same thing)\\n    // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\n  }\\n\\n  // 1000000000\\n  function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed)\\n    internal\\n    view\\n    returns (uint256)\\n  {\\n    uint256 ethPrice = getPrice(priceFeed);\\n    uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n    // or (Both will do the same thing)\\n    // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\n    // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n    return ethAmountInUsd;\\n  }\\n}\\n\",\"keccak256\":\"0xe121cce171a9eb60e0d58bc96cf8c426cd36d27acc19e5e5c490f3ba7241577b\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051620010983803806200109883398181016040528101906100349190610112565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061013f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100df826100b4565b9050919050565b6100ef816100d4565b81146100fa57600080fd5b50565b60008151905061010c816100e6565b92915050565b600060208284031215610128576101276100af565b5b6000610136848285016100fd565b91505092915050565b608051610f3662000162600039600081816103fb01526106ae0152610f366000f3fe60806040526004361061007f5760003560e01c8063893d20e81161004e578063893d20e8146101425780639e87a5cd1461016d578063b60d428814610198578063d7b4750c146101a25761008e565b80630343fb25146100985780630d8e6e2c146100d55780633ccfd60b146101005780636b69a592146101175761008e565b3661008e5761008c6101df565b005b6100966101df565b005b3480156100a457600080fd5b506100bf60048036038101906100ba919061091b565b610319565b6040516100cc9190610961565b60405180910390f35b3480156100e157600080fd5b506100ea610361565b6040516100f79190610961565b60405180910390f35b34801561010c57600080fd5b506101156103f9565b005b34801561012357600080fd5b5061012c61069d565b6040516101399190610961565b60405180910390f35b34801561014e57600080fd5b506101576106aa565b604051610164919061098b565b60405180910390f35b34801561017957600080fd5b506101826106d2565b60405161018f9190610a05565b60405180910390f35b6101a06101df565b005b3480156101ae57600080fd5b506101c960048036038101906101c49190610a4c565b6106fc565b6040516101d6919061098b565b60405180910390f35b6802b5e3af16b188000061021e600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461074490919063ffffffff16565b101561025f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025690610ad6565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102ad9190610b25565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f49190610b6e565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461047e576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561050257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116104b8575b5050505050905060005b815181101561058c57600082828151811061052a57610529610b9b565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061058490610bca565b91505061050c565b50600067ffffffffffffffff8111156105a8576105a7610c12565b5b6040519080825280602002602001820160405280156105d65781602001602082028036833780820191505090505b50600190805190602001906105ec929190610811565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161061390610c72565b60006040518083038185875af1925050503d8060008114610650576040519150601f19603f3d011682016040523d82523d6000602084013e610655565b606091505b5050905080610699576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069090610cd3565b60405180910390fd5b5050565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006001828154811061071257610711610b9b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061075083610780565b90506000670de0b6b3a764000085836107699190610cf3565b6107739190610d64565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156107ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f29190610e0d565b5050509150506402540be400816108099190610e88565b915050919050565b82805482825590600052602060002090810192821561088a579160200282015b828111156108895782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610831565b5b509050610897919061089b565b5090565b5b808211156108b457600081600090555060010161089c565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108e8826108bd565b9050919050565b6108f8816108dd565b811461090357600080fd5b50565b600081359050610915816108ef565b92915050565b600060208284031215610931576109306108b8565b5b600061093f84828501610906565b91505092915050565b6000819050919050565b61095b81610948565b82525050565b60006020820190506109766000830184610952565b92915050565b610985816108dd565b82525050565b60006020820190506109a0600083018461097c565b92915050565b6000819050919050565b60006109cb6109c66109c1846108bd565b6109a6565b6108bd565b9050919050565b60006109dd826109b0565b9050919050565b60006109ef826109d2565b9050919050565b6109ff816109e4565b82525050565b6000602082019050610a1a60008301846109f6565b92915050565b610a2981610948565b8114610a3457600080fd5b50565b600081359050610a4681610a20565b92915050565b600060208284031215610a6257610a616108b8565b5b6000610a7084828501610a37565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610ac0601b83610a79565b9150610acb82610a8a565b602082019050919050565b60006020820190508181036000830152610aef81610ab3565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b3082610948565b9150610b3b83610948565b9250828201905080821115610b5357610b52610af6565b5b92915050565b600081519050610b6881610a20565b92915050565b600060208284031215610b8457610b836108b8565b5b6000610b9284828501610b59565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610bd582610948565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610c0757610c06610af6565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610c5c600083610c41565b9150610c6782610c4c565b600082019050919050565b6000610c7d82610c4f565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610cbd600b83610a79565b9150610cc882610c87565b602082019050919050565b60006020820190508181036000830152610cec81610cb0565b9050919050565b6000610cfe82610948565b9150610d0983610948565b9250828202610d1781610948565b91508282048414831517610d2e57610d2d610af6565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d6f82610948565b9150610d7a83610948565b925082610d8a57610d89610d35565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610db481610d95565b8114610dbf57600080fd5b50565b600081519050610dd181610dab565b92915050565b6000819050919050565b610dea81610dd7565b8114610df557600080fd5b50565b600081519050610e0781610de1565b92915050565b600080600080600060a08688031215610e2957610e286108b8565b5b6000610e3788828901610dc2565b9550506020610e4888828901610df8565b9450506040610e5988828901610b59565b9350506060610e6a88828901610b59565b9250506080610e7b88828901610dc2565b9150509295509295909350565b6000610e9382610dd7565b9150610e9e83610dd7565b9250828202610eac81610dd7565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610ee457610ee3610af6565b5b8282058414831517610ef957610ef8610af6565b5b509291505056fea26469706673582212204c43e1d86bb3605f106915043b767f80552a60c5d515237dddc2860d25d856ad64736f6c63430008110033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c8063893d20e81161004e578063893d20e8146101425780639e87a5cd1461016d578063b60d428814610198578063d7b4750c146101a25761008e565b80630343fb25146100985780630d8e6e2c146100d55780633ccfd60b146101005780636b69a592146101175761008e565b3661008e5761008c6101df565b005b6100966101df565b005b3480156100a457600080fd5b506100bf60048036038101906100ba919061091b565b610319565b6040516100cc9190610961565b60405180910390f35b3480156100e157600080fd5b506100ea610361565b6040516100f79190610961565b60405180910390f35b34801561010c57600080fd5b506101156103f9565b005b34801561012357600080fd5b5061012c61069d565b6040516101399190610961565b60405180910390f35b34801561014e57600080fd5b506101576106aa565b604051610164919061098b565b60405180910390f35b34801561017957600080fd5b506101826106d2565b60405161018f9190610a05565b60405180910390f35b6101a06101df565b005b3480156101ae57600080fd5b506101c960048036038101906101c49190610a4c565b6106fc565b6040516101d6919061098b565b60405180910390f35b6802b5e3af16b188000061021e600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461074490919063ffffffff16565b101561025f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025690610ad6565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102ad9190610b25565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f49190610b6e565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461047e576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561050257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116104b8575b5050505050905060005b815181101561058c57600082828151811061052a57610529610b9b565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061058490610bca565b91505061050c565b50600067ffffffffffffffff8111156105a8576105a7610c12565b5b6040519080825280602002602001820160405280156105d65781602001602082028036833780820191505090505b50600190805190602001906105ec929190610811565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161061390610c72565b60006040518083038185875af1925050503d8060008114610650576040519150601f19603f3d011682016040523d82523d6000602084013e610655565b606091505b5050905080610699576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069090610cd3565b60405180910390fd5b5050565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006001828154811061071257610711610b9b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061075083610780565b90506000670de0b6b3a764000085836107699190610cf3565b6107739190610d64565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156107ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f29190610e0d565b5050509150506402540be400816108099190610e88565b915050919050565b82805482825590600052602060002090810192821561088a579160200282015b828111156108895782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610831565b5b509050610897919061089b565b5090565b5b808211156108b457600081600090555060010161089c565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108e8826108bd565b9050919050565b6108f8816108dd565b811461090357600080fd5b50565b600081359050610915816108ef565b92915050565b600060208284031215610931576109306108b8565b5b600061093f84828501610906565b91505092915050565b6000819050919050565b61095b81610948565b82525050565b60006020820190506109766000830184610952565b92915050565b610985816108dd565b82525050565b60006020820190506109a0600083018461097c565b92915050565b6000819050919050565b60006109cb6109c66109c1846108bd565b6109a6565b6108bd565b9050919050565b60006109dd826109b0565b9050919050565b60006109ef826109d2565b9050919050565b6109ff816109e4565b82525050565b6000602082019050610a1a60008301846109f6565b92915050565b610a2981610948565b8114610a3457600080fd5b50565b600081359050610a4681610a20565b92915050565b600060208284031215610a6257610a616108b8565b5b6000610a7084828501610a37565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610ac0601b83610a79565b9150610acb82610a8a565b602082019050919050565b60006020820190508181036000830152610aef81610ab3565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b3082610948565b9150610b3b83610948565b9250828201905080821115610b5357610b52610af6565b5b92915050565b600081519050610b6881610a20565b92915050565b600060208284031215610b8457610b836108b8565b5b6000610b9284828501610b59565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610bd582610948565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610c0757610c06610af6565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610c5c600083610c41565b9150610c6782610c4c565b600082019050919050565b6000610c7d82610c4f565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610cbd600b83610a79565b9150610cc882610c87565b602082019050919050565b60006020820190508181036000830152610cec81610cb0565b9050919050565b6000610cfe82610948565b9150610d0983610948565b9250828202610d1781610948565b91508282048414831517610d2e57610d2d610af6565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d6f82610948565b9150610d7a83610948565b925082610d8a57610d89610d35565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610db481610d95565b8114610dbf57600080fd5b50565b600081519050610dd181610dab565b92915050565b6000819050919050565b610dea81610dd7565b8114610df557600080fd5b50565b600081519050610e0781610de1565b92915050565b600080600080600060a08688031215610e2957610e286108b8565b5b6000610e3788828901610dc2565b9550506020610e4888828901610df8565b9450506040610e5988828901610b59565b9350506060610e6a88828901610b59565b9250506080610e7b88828901610dc2565b9150509295509295909350565b6000610e9382610dd7565b9150610e9e83610dd7565b9250828202610eac81610dd7565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610ee457610ee3610af6565b5b8282058414831517610ef957610ef8610af6565b5b509291505056fea26469706673582212204c43e1d86bb3605f106915043b767f80552a60c5d515237dddc2860d25d856ad64736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 73,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}