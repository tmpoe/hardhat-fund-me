{
  "address": "0xF6A4a9128acEAd46ecf048D75BB53fBE21407B50",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xba7cb2d5ea42bd654d14f3e5950f8d868cddbb2a94fcc23b41f608ace0975939",
  "receipt": {
    "to": null,
    "from": "0xC75444ef801b50f5601230db66F784e2078BE7Bb",
    "contractAddress": "0xF6A4a9128acEAd46ecf048D75BB53fBE21407B50",
    "transactionIndex": 17,
    "gasUsed": "859351",
    "logsBloom": "0x
    "blockHash": "0x3071b95be1eb516e41c7de6bdb3287a8e1406156a8061dd383ec15deaa00394f",
    "transactionHash": "0xba7cb2d5ea42bd654d14f3e5950f8d868cddbb2a94fcc23b41f608ace0975939",
    "logs": [],
    "blockNumber": 7994254,
    "cumulativeGasUsed": "2417373",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"
  ],
  "numDeployments": 1,
  "solcInputHash": "399ec4e4804db78ac61ea0a7a19f19f1",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) public addressToAmountFunded;\\n    address[] public funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address public /* immutable */ i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n    AggregatorV3Interface priceFeed;\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        addressToAmountFunded[msg.sender] += msg.value;\\n        funders.push(msg.sender);\\n    }\\n    \\n    function getVersion() public view returns (uint256){\\n        // ETH/USD price feed address of Goerli Network.\\n        return priceFeed.version();\\n    }\\n    \\n    modifier onlyOwner {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert NotOwner();\\n        _;\\n    }\\n    \\n    function withdraw() public onlyOwner {\\n        for (uint256 funderIndex=0; funderIndex < funders.length; funderIndex++){\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n    // Explainer from: https://solidity-by-example.org/fallback/\\n    // Ether is sent to contract\\n    //      is msg.data empty?\\n    //          /   \\\\ \\n    //         yes  no\\n    //         /     \\\\\\n    //    receive()?  fallback() \\n    //     /   \\\\ \\n    //   yes   no\\n    //  /        \\\\\\n    //receive()  fallback()\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n}\\n\\n// Concepts we didn't cover yet (will cover in later sections)\\n// 1. Enum\\n// 2. Events\\n// 3. Try / Catch\\n// 4. Function Selector\\n// 5. abi.encode / decode\\n// 6. Hash with keccak256\\n// 7. Yul / Assembly\",\"keccak256\":\"0xe976ec18fc9d72f72e84ada996f21ac22f242b15ce03e48c8c5baa5049529d4a\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n  // We could make this public, but then we'd have to deploy it\\n  function getPrice(AggregatorV3Interface priceFeed)\\n    internal\\n    view\\n    returns (uint256)\\n  {\\n    // https://docs.chain.link/docs/ethereum-addresses/\\n    (, int256 answer, , , ) = priceFeed.latestRoundData();\\n    // ETH/USD rate in 18 digit\\n    return uint256(answer * 10000000000);\\n    // or (Both will do the same thing)\\n    // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\n  }\\n\\n  // 1000000000\\n  function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed)\\n    internal\\n    view\\n    returns (uint256)\\n  {\\n    uint256 ethPrice = getPrice(priceFeed);\\n    uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n    // or (Both will do the same thing)\\n    // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\n    // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n    return ethAmountInUsd;\\n  }\\n}\\n\",\"keccak256\":\"0xe121cce171a9eb60e0d58bc96cf8c426cd36d27acc19e5e5c490f3ba7241577b\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610f18380380610f188339818101604052810190610032919061011d565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061014a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ea826100bf565b9050919050565b6100fa816100df565b811461010557600080fd5b50565b600081519050610117816100f1565b92915050565b600060208284031215610133576101326100ba565b5b600061014184828501610108565b91505092915050565b610dbf806101596000396000f3fe6080604052600436106100745760003560e01c80636b69a5921161004e5780636b69a5921461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80630d8e6e2c1461008d5780633ccfd60b146100b85780633e47d6f3146100cf57610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102e3565b6040516100af91906107d4565b60405180910390f35b3480156100c457600080fd5b506100cd61037b565b005b3480156100db57600080fd5b506100f660048036038101906100f19190610852565b6105bd565b60405161010391906107d4565b60405180910390f35b34801561011857600080fd5b506101216105d5565b60405161012e91906107d4565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b506101566105e2565b604051610163919061088e565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108d5565b610608565b6040516101a0919061088e565b60405180910390f35b6802b5e3af16b18800006101e8600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461064790919063ffffffff16565b1015610229576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102209061095f565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461027791906109ae565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b8152600401602060405180830381865afa158015610352573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037691906109f7565b905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610402576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104ad5760006001828154811061042857610427610a24565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104a590610a53565b915050610405565b50600067ffffffffffffffff8111156104c9576104c8610a9b565b5b6040519080825280602002602001820160405280156104f75781602001602082028036833780820191505090505b506001908051906020019061050d929190610714565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161053490610afb565b60006040518083038185875af1925050503d8060008114610571576040519150601f19603f3d011682016040523d82523d6000602084013e610576565b606091505b50509050806105ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b190610b5c565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061061857600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061065383610683565b90506000670de0b6b3a7640000858361066c9190610b7c565b6106769190610bed565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156106d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f59190610c96565b5050509150506402540be4008161070c9190610d11565b915050919050565b82805482825590600052602060002090810192821561078d579160200282015b8281111561078c5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610734565b5b50905061079a919061079e565b5090565b5b808211156107b757600081600090555060010161079f565b5090565b6000819050919050565b6107ce816107bb565b82525050565b60006020820190506107e960008301846107c5565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061081f826107f4565b9050919050565b61082f81610814565b811461083a57600080fd5b50565b60008135905061084c81610826565b92915050565b600060208284031215610868576108676107ef565b5b60006108768482850161083d565b91505092915050565b61088881610814565b82525050565b60006020820190506108a3600083018461087f565b92915050565b6108b2816107bb565b81146108bd57600080fd5b50565b6000813590506108cf816108a9565b92915050565b6000602082840312156108eb576108ea6107ef565b5b60006108f9848285016108c0565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610949601b83610902565b915061095482610913565b602082019050919050565b600060208201905081810360008301526109788161093c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109b9826107bb565b91506109c4836107bb565b92508282019050808211156109dc576109db61097f565b5b92915050565b6000815190506109f1816108a9565b92915050565b600060208284031215610a0d57610a0c6107ef565b5b6000610a1b848285016109e2565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a5e826107bb565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a9057610a8f61097f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610ae5600083610aca565b9150610af082610ad5565b600082019050919050565b6000610b0682610ad8565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610b46600b83610902565b9150610b5182610b10565b602082019050919050565b60006020820190508181036000830152610b7581610b39565b9050919050565b6000610b87826107bb565b9150610b92836107bb565b9250828202610ba0816107bb565b91508282048414831517610bb757610bb661097f565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610bf8826107bb565b9150610c03836107bb565b925082610c1357610c12610bbe565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c3d81610c1e565b8114610c4857600080fd5b50565b600081519050610c5a81610c34565b92915050565b6000819050919050565b610c7381610c60565b8114610c7e57600080fd5b50565b600081519050610c9081610c6a565b92915050565b600080600080600060a08688031215610cb257610cb16107ef565b5b6000610cc088828901610c4b565b9550506020610cd188828901610c81565b9450506040610ce2888289016109e2565b9350506060610cf3888289016109e2565b9250506080610d0488828901610c4b565b9150509295509295909350565b6000610d1c82610c60565b9150610d2783610c60565b9250828202610d3581610c60565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610d6d57610d6c61097f565b5b8282058414831517610d8257610d8161097f565b5b509291505056fea26469706673582212207772a615ed733f9368f520be0c4b854036fd98a6b2e991c4e118f923f1795afb64736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c80636b69a5921161004e5780636b69a5921461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80630d8e6e2c1461008d5780633ccfd60b146100b85780633e47d6f3146100cf57610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102e3565b6040516100af91906107d4565b60405180910390f35b3480156100c457600080fd5b506100cd61037b565b005b3480156100db57600080fd5b506100f660048036038101906100f19190610852565b6105bd565b60405161010391906107d4565b60405180910390f35b34801561011857600080fd5b506101216105d5565b60405161012e91906107d4565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b506101566105e2565b604051610163919061088e565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108d5565b610608565b6040516101a0919061088e565b60405180910390f35b6802b5e3af16b18800006101e8600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461064790919063ffffffff16565b1015610229576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102209061095f565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461027791906109ae565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b8152600401602060405180830381865afa158015610352573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037691906109f7565b905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610402576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104ad5760006001828154811061042857610427610a24565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104a590610a53565b915050610405565b50600067ffffffffffffffff8111156104c9576104c8610a9b565b5b6040519080825280602002602001820160405280156104f75781602001602082028036833780820191505090505b506001908051906020019061050d929190610714565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161053490610afb565b60006040518083038185875af1925050503d8060008114610571576040519150601f19603f3d011682016040523d82523d6000602084013e610576565b606091505b50509050806105ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b190610b5c565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061061857600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061065383610683565b90506000670de0b6b3a7640000858361066c9190610b7c565b6106769190610bed565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156106d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f59190610c96565b5050509150506402540be4008161070c9190610d11565b915050919050565b82805482825590600052602060002090810192821561078d579160200282015b8281111561078c5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610734565b5b50905061079a919061079e565b5090565b5b808211156107b757600081600090555060010161079f565b5090565b6000819050919050565b6107ce816107bb565b82525050565b60006020820190506107e960008301846107c5565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061081f826107f4565b9050919050565b61082f81610814565b811461083a57600080fd5b50565b60008135905061084c81610826565b92915050565b600060208284031215610868576108676107ef565b5b60006108768482850161083d565b91505092915050565b61088881610814565b82525050565b60006020820190506108a3600083018461087f565b92915050565b6108b2816107bb565b81146108bd57600080fd5b50565b6000813590506108cf816108a9565b92915050565b6000602082840312156108eb576108ea6107ef565b5b60006108f9848285016108c0565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610949601b83610902565b915061095482610913565b602082019050919050565b600060208201905081810360008301526109788161093c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109b9826107bb565b91506109c4836107bb565b92508282019050808211156109dc576109db61097f565b5b92915050565b6000815190506109f1816108a9565b92915050565b600060208284031215610a0d57610a0c6107ef565b5b6000610a1b848285016109e2565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a5e826107bb565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a9057610a8f61097f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610ae5600083610aca565b9150610af082610ad5565b600082019050919050565b6000610b0682610ad8565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610b46600b83610902565b9150610b5182610b10565b602082019050919050565b60006020820190508181036000830152610b7581610b39565b9050919050565b6000610b87826107bb565b9150610b92836107bb565b9250828202610ba0816107bb565b91508282048414831517610bb757610bb661097f565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610bf8826107bb565b9150610c03836107bb565b925082610c1357610c12610bbe565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c3d81610c1e565b8114610c4857600080fd5b50565b600081519050610c5a81610c34565b92915050565b6000819050919050565b610c7381610c60565b8114610c7e57600080fd5b50565b600081519050610c9081610c6a565b92915050565b600080600080600060a08688031215610cb257610cb16107ef565b5b6000610cc088828901610c4b565b9550506020610cd188828901610c81565b9450506040610ce2888289016109e2565b9350506060610cf3888289016109e2565b9250506080610d0488828901610c4b565b9150509295509295909350565b6000610d1c82610c60565b9150610d2783610c60565b9250828202610d3581610c60565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610d6d57610d6c61097f565b5b8282058414831517610d8257610d8161097f565b5b509291505056fea26469706673582212207772a615ed733f9368f520be0c4b854036fd98a6b2e991c4e118f923f1795afb64736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "i_owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 73,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}